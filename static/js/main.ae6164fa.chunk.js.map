{"version":3,"sources":["components/AddTodo.js","components/TodoItem.js","components/Todos.js","layout/Header.js","App.js","serviceWorker.js","index.js"],"names":["AddTodo","state","title","e","this","setState","currentTarget","value","preventDefault","props","addTodo","onSubmit","bind","className","type","name","placeholder","onChange","Component","TodoItem","editing","changedTitle","todo","_changed","console","log","textDecoration","completed","id","veiwStyle","editStyle","display","style","getStyle","markTodo","onClick","handleEditing","delTodo","handleEditingChange","handleEditingDone","Todos","todos","map","key","editTodo","saveTodo","Header","App","filter","length","editState","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ae6164fa.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass AddTodo extends Component {\r\n state = {\r\n  title: ''\r\n }\r\n onChange(e){\r\n  this.setState({title: e.currentTarget.value})\r\n }\r\n onSubmit(e){\r\n  e.preventDefault();\r\n  this.props.addTodo(this.state.title);\r\n  this.setState({title: ''});\r\n }\r\n render(){\r\n  return (\r\n   <form onSubmit={this.onSubmit.bind(this)} className=\"adding-field\"> \r\n    <input \r\n     type=\"text\"\r\n     name=\"title\"\r\n     placeholder=\"Add todo...\"\r\n     onChange={this.onChange.bind(this)} \r\n     value={this.state.title}/>\r\n     <input \r\n      type=\"submit\"\r\n      name=\"submit\"\r\n      />\r\n   </form>\r\n  )\r\n }\r\n}\r\nexport default AddTodo;","import React, {Component} from 'react';\r\n\r\nclass TodoItem extends Component {\r\n constructor(){\r\n   super();\r\n   this.state = {editing: false, changedTitle: '' }\r\n }\r\ncomponentDidMount(){\r\n  this.setState({\r\n    changedTitle: this.props.todo.title\r\n  })\r\n}\r\n handleEditing(e){\r\n   this.setState({editing: true, changedTitle: this.props.todo.title});\r\n }\r\n handleEditingDone(e){\r\n    this.setState({editing: false});\r\n }\r\n handleEditingChange(e){\r\n   let _changed = e.currentTarget.value;\r\n   console.log(_changed);\r\n   this.setState({changedTitle: _changed});\r\n}\r\n getStyle() {\r\n  return {\r\n   textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n  }\r\n }\r\n\r\n render(){\r\n  const { id} = this.props.todo;\r\n  let veiwStyle = {};\r\n  let editStyle = {};\r\n\r\n  if(this.state.editing){\r\n    veiwStyle.display = 'none'\r\n  } else {\r\n    editStyle.display = 'none'\r\n  }\r\n  \r\n  return (\r\n   <div style={this.getStyle()}>\r\n     <div className=\"item--done\" style={veiwStyle}>\r\n      <input type=\"checkbox\" onChange={this.props.markTodo.bind(this, id)}/>\r\n      {this.state.changedTitle}\r\n      <button onClick={this.handleEditing.bind(this, id)}>edit</button> \r\n      <button onClick={this.props.delTodo.bind(this, id)}>delete</button>\r\n     </div>\r\n     <div className=\"item--edit\" style={editStyle}>\r\n      <input type=\"text\"  value={this.state.changedTitle} onChange={this.handleEditingChange.bind(this)}/>\r\n      <input type=\"submit\" onClick={this.handleEditingDone.bind(this)} />\r\n     </div> \r\n   </div>\r\n  )\r\n }\r\n}\r\n\r\nexport default TodoItem;","import React, {Component} from 'react';\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass Todos extends Component {\r\n render(){\r\n  return this.props.todos.map((todo)=>(\r\n   <TodoItem \r\n     key={todo.id} \r\n     todo={todo} \r\n     markTodo={this.props.markTodo} \r\n     delTodo={this.props.delTodo}\r\n     editTodo={this.props.editTodo}\r\n     saveTodo={this.props.saveTodo} />\r\n  ));\r\n }\r\n}\r\nexport default Todos;","import React from 'react';\r\n\r\nfunction Header()  {\r\n  return (\r\n   <header>\r\n    <h1>Todo App</h1>\r\n   </header>\r\n  )\r\n }\r\nexport default Header;","import React, {Component} from 'react';\nimport './App.css';\nimport AddTodo from './components/AddTodo';\nimport Todos from './components/Todos';\nimport Header from './layout/Header';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      todos: []\n    }\n    this.addTodo = this.addTodo.bind(this);\n    this.markTodo = this.markTodo.bind(this);\n    this.delTodo = this.delTodo.bind(this);\n    this.editTodo = this.editTodo.bind(this);\n  }\n  markTodo = (id) => (\n    this.setState({ todos: this.state.todos.map((todo)=>{\n      if(todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo;\n    })})\n  )\n  delTodo = (id) => {\n    this.setState({todos: [...this.state.todos.filter(todo => todo.id !== id)]})\n  }\n  editTodo = (id, e) => (\n    this.setState({ todos: this.state.todos.map((todo)=>{\n      if(todo.id === id) {\n        console.log()\n        \n      }\n      return todo;\n    })})\n  )\n  addTodo = (title) => {\n    const oldLength = this.state.todos.length;\n    const todo = {\n      id: oldLength + 1,\n      title: title,\n      completed: false,\n      editState: false\n    }\n\n    console.log(todo, this.state.todos);\n    this.setState({todos: [...this.state.todos, todo]});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      <Header />\n      <AddTodo addTodo={this.addTodo}/>\n      <Todos todos={this.state.todos} markTodo={this.markTodo} delTodo={this.delTodo} editTodo={this.editTodo} saveTodo={this.saveTodo}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}